if(NOT TARGET cosma::cosma)
    cmake_policy(PUSH) # Save project's policies
    if(POLICY CMP0074)
        cmake_policy(SET CMP0074 NEW)
    endif()
    include(CMakeFindDependencyMacro)

    # Bundled modules should be found first to prevent conflicts with similarly
    # named modules in calling projects.
    #
    set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR} ${CMAKE_MODULE_PATH})

    set(MKL_ROOT "@MKL_ROOT@")
    set(MPI_DETERMINE_LIBRARY_VERSION TRUE)
    find_package(MPI COMPONENTS "CXX" REQUIRED)

    set(COSMA_BLAS "@COSMA_BLAS@")
    set(COSMA_SCALAPACK "@COSMA_SCALAPACK@")
    set(COSMA_BLAS_VENDOR "@COSMA_BLAS_VENDOR@")
    set(COSMA_BLAS_THREADING "@COSMA_BLAS_THREADING@")

    if ("@COSMA_GPU_BACKEND@" STREQUAL "CUDA" OR "@COSMA_GPU_BACKEND@" STREQUAL "ROCM")
      if (${COSMA_BLAS} STREQUAL "CUDA")
        find_dependency(CUDAToolkit)
      else()
        find_dependency(hip)
      endif()

      set(TILEMM_GPU_BACKEND "@COSMA_GPU_BACKEND@" CACHE STRING FORCE "")
      find_dependency(Tiled-MM) # bundled

      if ("@COSMA_WITH_NCCL@")
        find_dependency(NCCL)
      endif()

      if("@COSMA_WITH_RCCL@")
        find_dependency(rccl)
      endif()
    endif ()

    if (NOT @COSMA_BLAS_VENDOR@ MATCHES "OFF")
      find_dependency(Blas)
    endif()

    if (NOT ${COSMA_SCALAPACK} MATCHES "OFF")
        find_dependency(SCALAPACK)
    endif ()

    if ("@COSMA_WITH_PROFILING@")
        find_dependency(semiprof)
    endif ()

    # Clean-up module path.
    #
    list(REMOVE_ITEM CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

    # These are bundled with cosma
    #
    find_dependency(costa)

    include("${CMAKE_CURRENT_LIST_DIR}/cosmaTargets.cmake")
    cmake_policy(POP) # Restore project's policies
endif()
